{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.e4cc5e8bdfb079842147.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/_app.js"],"sourcesContent":["import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from 'react';\r\nimport App from 'next/app';\r\nimport ApiContext from '../context/ApiContext';\r\nimport {get} from 'axios'\r\nimport Router from 'next/router';\r\n\r\nconst initialState = {\r\n    itemList: null,\r\n    ads: null\r\n};\r\n\r\nclass MyApp extends App {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = initialState\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (this.state.itemList == null) {\r\n    //can use 'fetch' as well\r\n      get('http://localhost:3001/api/products?_page=1&_limit=60').then((response) => {\r\n          console.log(response.data);\r\n          let x = response.data\r\n          this.setState({itemList:x})\r\n      }).catch((error) => {\r\n          console.log(error)\r\n      })\r\n    }\r\n    \r\n  };\r\n\r\n  setlist = (typex, page) => {\r\n    if (typex == null) {\r\n        get(`http://localhost:3001/api/products?_page=${page}&_limit=60`).then((response) => {\r\n            console.log(response.data);\r\n            let x = response.data\r\n            this.setState({itemList:x})\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }else{\r\n        get(`http://localhost:3001/api/products?_page=${page}&_limit=60?&_sort=${typex}`).then((response) => {\r\n            console.log(response.data);\r\n            let x = response.data\r\n            this.setState({itemList:x})\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    return (\r\n        <ApiContext.Provider value={{list:this.state.itemList, setlist:this.setlist}}>\r\n            <Component {...pageProps} />\r\n        </ApiContext.Provider>\r\n         \r\n    );\r\n  }\r\n}\r\n\r\nexport default MyApp"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAFA;AAGA;AACA;;;AAqCA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAnDA;AACA;AAqDA;;;;A","sourceRoot":""}