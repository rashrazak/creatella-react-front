{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\projek\\\\creatella-react-front\\\\components\\\\List.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport ApiContext from '../context/ApiContext';\nimport { Row, Col, Spinner, Card, CardText, CardBody, CardTitle, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nfunction List() {\n  var _useContext = useContext(ApiContext),\n      list = _useContext.list,\n      setlist = _useContext.setlist;\n\n  var _useState = useState([]),\n      listing = _useState[0],\n      setlisting = _useState[1];\n\n  var _useState2 = useState(false),\n      fetchData = _useState2[0],\n      setfetchData = _useState2[1];\n\n  var _useState3 = useState(1),\n      limit = _useState3[0],\n      setlimit = _useState3[1];\n\n  var _useState4 = useState(false),\n      stopscroll = _useState4[0],\n      setstopscroll = _useState4[1];\n\n  var _useState5 = useState(1),\n      page = _useState5[0],\n      setpage = _useState5[1];\n\n  var _useState6 = useState(false),\n      dropdownOpen = _useState6[0],\n      setDropdownOpen = _useState6[1];\n\n  var toggle = function toggle() {\n    return setDropdownOpen(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  useEffect(function () {\n    if (list) {\n      var x = list;\n      x = x.slice(0, 20);\n      setlisting(x);\n    }\n  }, [list]);\n  useEffect(function () {\n    if (!fetchData) return;\n    fetchMoreListItems(20);\n  }, [fetchData]);\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      return window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  var handleScroll = function handleScroll() {\n    var d = document.getElementById('getScroll'); // console.log(window.innerHeight + document.documentElement.scrollTop);\n    // console.log(document.documentElement.offsetHeight + 100);\n\n    if (window.innerHeight + document.documentElement.scrollTop >= 100 + document.documentElement.offsetHeight || fetchData) {\n      //set top 100px\n      setfetchData(true);\n    }\n  };\n\n  var fetchMoreListItems = function fetchMoreListItems(q) {\n    setTimeout(function () {\n      console.log(limit);\n      var l = listing.length;\n      var x = list;\n      var y = q;\n      var z = limit * 20;\n      x = x.slice(z, z + 20);\n\n      if (x.length == 0) {\n        setstopscroll(true);\n      } else {\n        setlisting(function (prevState) {\n          return [].concat(_toConsumableArray(prevState), _toConsumableArray(x));\n        });\n        setfetchData(false);\n        setlimit(function (x) {\n          return x + 1;\n        });\n      }\n\n      ;\n    }, 2000);\n  };\n\n  var clickType = function clickType(typex) {\n    var type = typex;\n    setlisting([]);\n    setlist(type, page);\n  };\n\n  return __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Col, {\n    sm: \"12\",\n    xs: \"12\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(DropdownToggle, {\n    caret: true,\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Select Sort\"), __jsx(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(DropdownItem, {\n    onClick: function onClick() {\n      return clickType('size');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"By Size\"), __jsx(DropdownItem, {\n    divider: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(DropdownItem, {\n    onClick: function onClick() {\n      return clickType('price');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"By Price\"), __jsx(DropdownItem, {\n    divider: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(DropdownItem, {\n    onClick: function onClick() {\n      return clickType('id');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"By Id\"))))), listing.map(function (v, i) {\n    var size = \"\".concat(v.size, \"px\");\n    var cents = v.price / 100;\n    cents = \"$ \".concat(cents.toFixed(2));\n    var finalDate = null;\n    var oldDate = new Date(v.date);\n    var today = new Date();\n    var weekAgo = new Date();\n    var week = today.getDate() - 7;\n    weekAgo.setDate(week);\n\n    if (oldDate.getTime() > weekAgo.getTime() && oldDate.getTime() < today.getTime()) {\n      var diff = (today.getTime() - oldDate.getTime()) / (1000 * 3600 * 24);\n      diff = Math.round(diff);\n      finalDate = \"\".concat(diff, \" days ago\");\n    } else {\n      var day = oldDate.getDate();\n      var month = oldDate.getMonth() + 1;\n      var year = oldDate.getFullYear();\n      finalDate = \"\".concat(day, \"/\").concat(month, \"/\").concat(year);\n    }\n\n    return __jsx(Col, {\n      sm: \"6\",\n      xs: \"6\",\n      md: \"4\",\n      key: i,\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(Card, {\n      style: {\n        height: '200px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(CardBody, {\n      style: {\n        padding: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(CardTitle, {\n      style: {\n        fontSize: size,\n        lineHeight: '3',\n        textAlign: 'center',\n        letterSpacing: '0',\n        color: '#4d4d4d',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, v.face), __jsx(CardText, {\n      style: {\n        position: \"absolute\",\n        bottom: '20px',\n        color: '#E01A1A',\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Size: \", size), __jsx(CardText, {\n      style: {\n        position: \"absolute\",\n        bottom: '3px',\n        color: '#E01A1A',\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Price: \", cents), __jsx(CardText, {\n      style: {\n        position: \"absolute\",\n        bottom: '0',\n        color: '#E01A1A',\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Date: \", finalDate))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }), stopscroll == false && fetchData && 'Loading....', listing.length == 0 && 'Loading...');\n}\n\nexport default List;","map":{"version":3,"sources":["C:/wamp64/www/projek/creatella-react-front/components/List.js"],"names":["React","useContext","useState","useEffect","ApiContext","Row","Col","Spinner","Card","CardText","CardBody","CardTitle","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Pagination","PaginationItem","PaginationLink","List","list","setlist","listing","setlisting","fetchData","setfetchData","limit","setlimit","stopscroll","setstopscroll","page","setpage","dropdownOpen","setDropdownOpen","toggle","prevState","x","slice","fetchMoreListItems","window","addEventListener","handleScroll","removeEventListener","d","document","getElementById","innerHeight","documentElement","scrollTop","offsetHeight","q","setTimeout","console","log","l","length","y","z","clickType","typex","type","marginBottom","map","v","i","size","cents","price","toFixed","finalDate","oldDate","Date","date","today","weekAgo","week","getDate","setDate","getTime","diff","Math","round","day","month","getMonth","year","getFullYear","cursor","height","padding","fontSize","lineHeight","textAlign","letterSpacing","color","fontWeight","face","position","bottom"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\r\nimport ApiContext from '../context/ApiContext'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Spinner, \r\n    Card, CardText, CardBody,\r\n  CardTitle,\r\n  UncontrolledDropdown,\r\n  DropdownToggle, DropdownMenu, DropdownItem,\r\n  Pagination, PaginationItem, PaginationLink\r\n} from 'reactstrap'\r\n\r\nfunction List() {\r\n    const {list, setlist} = useContext(ApiContext)\r\n    const [listing, setlisting] = useState([]);\r\n    const [fetchData, setfetchData] = useState(false);\r\n    const [limit, setlimit] = useState(1)\r\n    const [stopscroll, setstopscroll] = useState(false)\r\n    const [page, setpage] = useState(1)\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n\r\n    useEffect(() => {\r\n        if (list) {\r\n            let x = list;\r\n            x = x.slice(0,20)\r\n            setlisting(x)\r\n        }\r\n    }, [list])\r\n\r\n    useEffect(() => {\r\n        if (!fetchData) return;\r\n        fetchMoreListItems(20);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    const handleScroll = () => {\r\n        let d = document.getElementById('getScroll');\r\n\r\n        // console.log(window.innerHeight + document.documentElement.scrollTop);\r\n        // console.log(document.documentElement.offsetHeight + 100);\r\n        if (window.innerHeight + document.documentElement.scrollTop >= 100 + document.documentElement.offsetHeight || fetchData){ //set top 100px\r\n            setfetchData(true);\r\n        }\r\n    }\r\n\r\n    const fetchMoreListItems = (q) => {\r\n        setTimeout(() => {\r\n            console.log(limit)\r\n            let l = listing.length;\r\n            let x = list;\r\n            let y = q \r\n            let z = limit * 20\r\n            x = x.slice(z,z + 20)\r\n            if (x.length == 0){\r\n                setstopscroll(true)\r\n            }else{\r\n                setlisting(prevState => [...prevState,...x]);\r\n                setfetchData(false);\r\n                setlimit((x) => x+1)\r\n            };\r\n            \r\n        }, 2000);\r\n    }\r\n\r\n    const clickType = (typex) =>{\r\n        let type = typex;\r\n        setlisting([])\r\n        setlist(type, page);\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col sm=\"12\" xs=\"12\" md=\"12\">\r\n            <div style={{float:'right', marginBottom:'10px'}}>\r\n                <Dropdown >\r\n                    <DropdownToggle caret isOpen={dropdownOpen} toggle={toggle}>\r\n                        Select Sort\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => clickType('size')}>By Size</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={() => clickType('price')}>By Price</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={() => clickType('id')}>By Id</DropdownItem>\r\n                    </DropdownMenu>\r\n                </Dropdown >\r\n            </div>\r\n            </Col>\r\n        {   \r\n            listing.map((v,i) => {\r\n                let size = `${v.size}px`;\r\n                let cents = v.price / 100\r\n                cents = `$ ${cents.toFixed(2)}`\r\n                let finalDate = null\r\n                let oldDate = new Date(v.date);\r\n                let today = new Date()\r\n                let weekAgo = new Date()\r\n                let week = today.getDate() - 7 ;\r\n                weekAgo.setDate(week)\r\n                if (oldDate.getTime() > weekAgo.getTime() && oldDate.getTime() < today.getTime() ) {\r\n                    let diff = ( today.getTime() - oldDate.getTime() ) / (1000 * 3600 * 24);\r\n                    diff = Math.round(diff)\r\n                    finalDate = `${diff} days ago`\r\n                }else{\r\n                    let day = oldDate.getDate();\r\n                    let month = oldDate.getMonth() + 1;\r\n                    let year = oldDate.getFullYear();\r\n\r\n                    finalDate = `${day}/${month}/${year}`\r\n                }\r\n\r\n                \r\n\r\n                return(\r\n                    <Col sm=\"6\" xs=\"6\" md=\"4\" key={i} style={{cursor:'pointer'}} >\r\n                        <Card style={{height:'200px'}} >\r\n                            <CardBody style={{padding:'10px'}}>\r\n                                <CardTitle style={{fontSize:size,lineHeight:'3',textAlign:'center',letterSpacing:'0',color:'#4d4d4d', fontWeight:'bold'}}>{v.face}</CardTitle>\r\n                                <CardText style={{position:\"absolute\",bottom:'20px',color:'#E01A1A',fontSize:'14px', fontWeight:'bold'}}>Size: {size}</CardText>\r\n                                <CardText style={{position:\"absolute\",bottom:'3px',color:'#E01A1A',fontSize:'14px', fontWeight:'bold'}}>Price: {cents}</CardText>\r\n                                <CardText style={{position:\"absolute\",bottom:'0',color:'#E01A1A',fontSize:'14px', fontWeight:'bold'}}>Date: {finalDate}</CardText>\r\n                            </CardBody>\r\n                        </Card> \r\n                        <br/>  \r\n                        \r\n\r\n                    </Col>\r\n                )\r\n            })\r\n        }\r\n        { stopscroll == false && fetchData && 'Loading....' }\r\n        {listing.length == 0 && 'Loading...'}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default List\r\n"]},"metadata":{},"sourceType":"module"}