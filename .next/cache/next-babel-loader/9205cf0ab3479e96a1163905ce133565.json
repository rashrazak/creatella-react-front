{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\projek\\\\creatella-react-front\\\\components\\\\List.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ApiContext from '../context/ApiContext';\nimport { Row, Col, Container, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nfunction List() {\n  const {\n    list\n  } = useContext(ApiContext);\n  const [listing, setlisting] = useState([]);\n  const [fetchData, setfetchData] = useState(false);\n  const [limit, setlimit] = useState(0);\n  useEffect(() => {\n    if (list) {\n      let x = list;\n      x = x.slice(0, 20);\n      setlisting(x);\n    }\n  }, [list]);\n  useEffect(() => {\n    if (!fetchData) return;\n    fetchMoreListItems(20);\n  }, [fetchData]);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  function handleScroll() {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || limit) {\n      setlimit(x => x + 1);\n      setfetchData(true);\n    }\n  }\n\n  function fetchMoreListItems(q) {\n    setTimeout(() => {\n      let l = listing.length;\n      let x = list;\n      let y = q;\n      let z = limit * 20;\n      x = x.slice(z, z + 20);\n      setlisting(prevState => [...prevState, x]);\n      setfetchData(false);\n    }, 2000);\n  }\n\n  return __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, listing.map((v, i) => {\n    let size = `${v.size}px`;\n    let cents = `$ ${v.price / 100}`;\n    let finalDate = null;\n    let oldDate = new Date(v.date);\n    let today = new Date();\n    let weekAgo = today.getDate() - 7;\n\n    if (oldDate.getTime() > weekAgo.getTime() && oldDate.getTime() < today.getTime()) {\n      let diff = (today.getTime() - oldDate.getTime()) / (1000 * 3600 * 24);\n      finalDate = `${diff} days ago`;\n    } else {\n      let day = oldDate.getDate();\n      let month = oldDate.getMonth() + 1;\n      let year = oldDate.getFullYear();\n      finalDate = `${day}/${month}/${year}`;\n    }\n\n    return __jsx(Col, {\n      sm: \"6\",\n      xs: \"6\",\n      md: \"2\",\n      key: i,\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(Card, {\n      style: {\n        height: '170.15px',\n        width: '140.2px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(CardBody, {\n      style: {\n        padding: '0.25rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(CardTitle, {\n      style: {\n        fontSize: '12px',\n        lineHeight: '1',\n        textAlign: 'left',\n        letterSpacing: '0',\n        color: '#4d4d4d',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, v.face), __jsx(CardText, {\n      style: {\n        position: \"absolute\",\n        bottom: '0',\n        color: '#E01A1A',\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, size), __jsx(CardText, {\n      style: {\n        position: \"absolute\",\n        bottom: '0',\n        color: '#E01A1A',\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, cents), __jsx(CardText, {\n      style: {\n        position: \"absolute\",\n        bottom: '0',\n        color: '#E01A1A',\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, finalDate))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }));\n}\n\nexport default List;","map":{"version":3,"sources":["C:/wamp64/www/projek/creatella-react-front/components/List.js"],"names":["React","ApiContext","Row","Col","Container","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","List","list","useContext","listing","setlisting","useState","fetchData","setfetchData","limit","setlimit","useEffect","x","slice","fetchMoreListItems","window","addEventListener","handleScroll","removeEventListener","innerHeight","document","documentElement","scrollTop","offsetHeight","q","setTimeout","l","length","y","z","prevState","map","v","i","size","cents","price","finalDate","oldDate","Date","date","today","weekAgo","getDate","getTime","diff","day","month","getMonth","year","getFullYear","cursor","height","width","padding","fontSize","lineHeight","textAlign","letterSpacing","color","fontWeight","face","position","bottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ApiContext from '../context/ApiContext'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap'\r\n\r\nfunction List() {\r\n    const {list} = useContext(ApiContext)\r\n    const [listing, setlisting] = useState([]);\r\n    const [fetchData, setfetchData] = useState(false);\r\n    const [limit, setlimit] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (list) {\r\n            let x = list;\r\n            x = x.slice(0,20)\r\n            setlisting(x)\r\n        }\r\n    }, [list])\r\n\r\n    useEffect(() => {\r\n        if (!fetchData) return;\r\n        fetchMoreListItems(20);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    function handleScroll() {\r\n        if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || limit){\r\n            setlimit((x) => x + 1)\r\n            setfetchData(true);\r\n        }\r\n    }\r\n\r\n    function fetchMoreListItems(q) {\r\n        setTimeout(() => {\r\n            let l = listing.length;\r\n            let x = list;\r\n            let y = q \r\n            let z = limit * 20\r\n            x = x.slice(z,z + 20)\r\n            setlisting(prevState => ([...prevState, x]));\r\n            setfetchData(false);\r\n        }, 2000);\r\n    }\r\n    return (\r\n        <Row>\r\n        {\r\n        listing.map((v,i) => {\r\n            let size = `${v.size}px`;\r\n            let cents = `$ ${v.price / 100}`\r\n            let finalDate = null\r\n            let oldDate = new Date(v.date);\r\n            let today = new Date()\r\n            let weekAgo = today.getDate() - 7;\r\n            if (oldDate.getTime() > weekAgo.getTime() && oldDate.getTime() < today.getTime() ) {\r\n                let diff = ( today.getTime() - oldDate.getTime() ) / (1000 * 3600 * 24);\r\n                finalDate = `${diff} days ago`\r\n            }else{\r\n                let day = oldDate.getDate();\r\n                let month = oldDate.getMonth() + 1;\r\n                let year = oldDate.getFullYear();\r\n\r\n                finalDate = `${day}/${month}/${year}`\r\n            }\r\n\r\n            \r\n\r\n            return(\r\n                <Col sm=\"6\" xs=\"6\" md=\"2\" key={i} style={{cursor:'pointer'}}>\r\n                    <Card style={{height:'170.15px',width:'140.2px'}} >\r\n                        <CardBody style={{padding:'0.25rem'}}>\r\n                            <CardTitle style={{fontSize:'12px',lineHeight:'1',textAlign:'left',letterSpacing:'0',color:'#4d4d4d', fontWeight:'bold'}}>{v.face}</CardTitle>\r\n                            <CardText style={{position:\"absolute\",bottom:'0',color:'#E01A1A',fontSize:'14px', fontWeight:'bold'}}>{size}</CardText>\r\n                            <CardText style={{position:\"absolute\",bottom:'0',color:'#E01A1A',fontSize:'14px', fontWeight:'bold'}}>{cents}</CardText>\r\n                            <CardText style={{position:\"absolute\",bottom:'0',color:'#E01A1A',fontSize:'14px', fontWeight:'bold'}}>{finalDate}</CardText>\r\n                        </CardBody>\r\n                    </Card> \r\n                    <br/>  \r\n                </Col>\r\n            )\r\n        })\r\n        }\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default List\r\n"]},"metadata":{},"sourceType":"module"}